{"version":3,"sources":["meteor://ðŸ’»app/client/template.poster.js","meteor://ðŸ’»app/client/map.js","meteor://ðŸ’»app/client/poster.js","meteor://ðŸ’»app/client/summernote.js","meteor://ðŸ’»app/both/poster.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"map\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"header\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"posts\")), \"\\n    \");\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"header\");\nTemplate[\"header\"] = new Template(\"Template.header\", (function() {\n  var view = this;\n  return HTML.HEADER(HTML.Raw(\"\\n        <!-- h1>Poster</h1 -->\\n        \"), Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"mySummerNote\")), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"posts\");\nTemplate[\"posts\"] = new Template(\"Template.posts\", (function() {\n  var view = this;\n  return HTML.UL(\"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"posts\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"post\")), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"post\");\nTemplate[\"post\"] = new Template(\"Template.post\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isMyPost\"));\n  }, function() {\n    return [ \"\\n            \", HTML.BUTTON({\n      \"class\": \"delete\"\n    }, HTML.CharRef({\n      html: \"&times;\",\n      str: \"Ã—\"\n    })), \"\\n        \" ];\n  }), \"\\n\\n        \", Blaze._TemplateWith(function() {\n    return {\n      shape: Spacebars.call(\"circle\"),\n      size: Spacebars.call(\"small\"),\n      user: Spacebars.call(\"{{author}}\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"avatar\"));\n  }), \"\\n        \", HTML.DIV({\n    \"class\": \"username\"\n  }, \" \", Blaze.View(\"lookup:username\", function() {\n    return Spacebars.mustache(view.lookup(\"username\"));\n  }), \" \"), \"\\n        \", HTML.DIV({\n    \"class\": \"postText\"\n  }, \" \", Blaze.View(\"lookup:text\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"text\")));\n  }), \" \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"mySummerNote\");\nTemplate[\"mySummerNote\"] = new Template(\"Template.mySummerNote\", (function() {\n  var view = this;\n  return HTML.Raw('<div id=\"summernote\"></div>\\n    <button id=\"post\" type=\"button\" class=\"btn btn-info\">Post</button>');\n}));\n\nTemplate.__checkName(\"map\");\nTemplate[\"map\"] = new Template(\"Template.map\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"map\"\n  }, \"\\n        Map goes here!\\n        \", HTML.DIV({\n    \"class\": \"map-container\"\n  }, \"\\n            \", Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(\"exampleMap\"),\n      options: Spacebars.call(view.lookup(\"exampleMapOptions\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"googleMap\"));\n  }), \"\\n        \"), \"\\n    \");\n}));\n","\nMeteor.startup(() => {\n    GoogleMaps.load()\n})\n\n\nTemplate.map.helpers({\n    exampleMapOptions: function() {\n        // Make sure the maps API has loaded\n        if (GoogleMaps.loaded()) {\n            // Map initialization options\n            return {\n                center: new google.maps.LatLng(-37.8136, 144.9631),\n                zoom: 8\n            };\n        }\n    }\n});\n\nTemplate.map.onCreated(function() {\n    // We can use the `ready` callback to interact with the map API once the map is ready.\n    GoogleMaps.ready('exampleMap', function(map) {\n        // Add a marker to the map once it's ready\n        var marker = new google.maps.Marker({\n            position: map.options.center,\n            map: map.instance\n        })\n    });\n});","Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n});\n\n// This code only runs on the client\nTemplate.posts.helpers({\n    posts: function () {\n        return Posts.find({}, {sort: {createdAt: -1}})\n    }\n});\n\n\n// TODO: make sure the server only allows user to remove own posts\nTemplate.post.events({\n    \"click .delete\": function () {\n        Posts.remove(this._id)\n    }\n});\n\nTemplate.post.helpers({\n\n    // Returns true if this post is mine\n    isMyPost: function() {\n        var me = Meteor.userId()\n\n        // If I am not logged in, none of the posts are recognized as \"mine\"\n        if (!me)\n            return false;\n\n        // TODO: Renamed \"owner\" into \"author\" and never did a db migration.\n        // \"Owner\" is here only for historical reasons.\n        var result = ( me == this.author || me == this.owner);\n        return result\n    },\n\n    author: function() {\n\n        // TODO db migration from owner to author\n        var authorId = this.author || this.owner;\n        var author = Meteor.users.findOne({_id: authorId});\n        console.log(\"Found author: \" + \"for \" + authorId, author);\n        return author\n    }\n})\n\n\n\n\n","Template.mySummerNote.rendered = function () {\n    console.log(\"mySummerNote rendered\");\n    $('#summernote').summernote({\n        //   airMode: true\n        height: 80,                 // set editor height\n        minHeight: null,             // set minimum height of editor\n        maxHeight: null,             // set maximum height of editor\n        focus: true,                  // set focus to editable area after initializing summernote\n        placeholder:  \"Type a new post\"\n    });\n};\n\n\nTemplate.mySummerNote.events({\n    \"ignore me\": function () {\n        var html = $('#summernote').summernote('code');\n        console.log(html);\n    },\n\n    \"click #post\": function (event) {\n        // Prevent default browser form submit\n\n        console.log(\"New rich text post submitted\");\n        event.preventDefault();\n\n        // Get value from form element\n        var html = $('#summernote').summernote('code');\n        console.log(html);\n\n        // If new post is not empty, insert it\n        if ($.trim(html) != '') {\n\n            var me = Meteor.user();\n\n            // me.sername if user logged in with password.\n            // me.profile.name if user logged in with Facebook and maybe other OAuth services.\n            var username = me.username || me.profile.name\n\n            // Insert a post into the collection\n            Posts.insert({\n                // TODO: this field should now be \"html\", not \"text\", but too lazy to do another db migration\n                text: html,\n                createdAt: new Date(),            // current time\n                author: Meteor.userId(),           // _id of logged in user\n                username: username  // username of logged in user\n            });\n\n            // Clear form\n            $('#summernote').summernote('code', \"\");\n            //   event.target.text.value = \"\";\n        }\n    }\n});\n\nTemplate.mySummerNote.destroyed = function() {\n    console.log(\"Template destroyed\");\n    $('#summernote').summernote('destroy');\n}\n\n// TODO sanitize html output of Summernote https://github.com/search?l=JavaScript&q=sanitize+html\n\n","Posts = new Mongo.Collection(\"posts\");\n"]}