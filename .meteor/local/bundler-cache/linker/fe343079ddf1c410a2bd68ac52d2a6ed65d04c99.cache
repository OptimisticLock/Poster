[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nAvatar = Package['utilities:avatar'].Avatar;\nmeteorEnv = Package.meteor.meteorEnv;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nFastClick = Package.fastclick.FastClick;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"poster.html\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/template.poster.js                                                                                      //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n                                                                                                                  // 1\nTemplate.body.addContent((function() {                                                                            // 2\n  var view = this;                                                                                                // 3\n  return HTML.DIV({                                                                                               // 4\n    \"class\": \"container\"                                                                                          // 5\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"header\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"posts\")), \"\\n    \");\n}));                                                                                                              // 7\nMeteor.startup(Template.body.renderToDocument);                                                                   // 8\n                                                                                                                  // 9\nTemplate.__checkName(\"header\");                                                                                   // 10\nTemplate[\"header\"] = new Template(\"Template.header\", (function() {                                                // 11\n  var view = this;                                                                                                // 12\n  return HTML.HEADER(HTML.Raw(\"\\n        <!-- h1>Poster</h1 -->\\n        \"), Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                            // 14\n  }, function() {                                                                                                 // 15\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"mySummerNote\")), \"\\n        \" ];            // 16\n  }), \"\\n    \");                                                                                                  // 17\n}));                                                                                                              // 18\n                                                                                                                  // 19\nTemplate.__checkName(\"posts\");                                                                                    // 20\nTemplate[\"posts\"] = new Template(\"Template.posts\", (function() {                                                  // 21\n  var view = this;                                                                                                // 22\n  return HTML.UL(\"\\n        \", Blaze.Each(function() {                                                            // 23\n    return Spacebars.call(view.lookup(\"posts\"));                                                                  // 24\n  }, function() {                                                                                                 // 25\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"post\")), \"\\n        \" ];                    // 26\n  }), \"\\n    \");                                                                                                  // 27\n}));                                                                                                              // 28\n                                                                                                                  // 29\nTemplate.__checkName(\"post\");                                                                                     // 30\nTemplate[\"post\"] = new Template(\"Template.post\", (function() {                                                    // 31\n  var view = this;                                                                                                // 32\n  return HTML.LI(\"\\n        \", Blaze.If(function() {                                                              // 33\n    return Spacebars.call(view.lookup(\"isMyPost\"));                                                               // 34\n  }, function() {                                                                                                 // 35\n    return [ \"\\n            \", HTML.BUTTON({                                                                      // 36\n      \"class\": \"delete\"                                                                                           // 37\n    }, HTML.CharRef({                                                                                             // 38\n      html: \"&times;\",                                                                                            // 39\n      str: \"Ã—\"                                                                                                    // 40\n    })), \"\\n        \" ];                                                                                          // 41\n  }), \"\\n\\n        \", Blaze._TemplateWith(function() {                                                            // 42\n    return {                                                                                                      // 43\n      shape: Spacebars.call(\"circle\"),                                                                            // 44\n      size: Spacebars.call(\"small\"),                                                                              // 45\n      user: Spacebars.call(\"{{author}}\")                                                                          // 46\n    };                                                                                                            // 47\n  }, function() {                                                                                                 // 48\n    return Spacebars.include(view.lookupTemplate(\"avatar\"));                                                      // 49\n  }), \"\\n        \", HTML.DIV({                                                                                    // 50\n    \"class\": \"username\"                                                                                           // 51\n  }, \" \", Blaze.View(\"lookup:username\", function() {                                                              // 52\n    return Spacebars.mustache(view.lookup(\"username\"));                                                           // 53\n  }), \" \"), \"\\n        \", HTML.DIV({                                                                              // 54\n    \"class\": \"postText\"                                                                                           // 55\n  }, \" \", Blaze.View(\"lookup:text\", function() {                                                                  // 56\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"text\")));                                            // 57\n  }), \" \"), \"\\n    \");                                                                                            // 58\n}));                                                                                                              // 59\n                                                                                                                  // 60\nTemplate.__checkName(\"mySummerNote\");                                                                             // 61\nTemplate[\"mySummerNote\"] = new Template(\"Template.mySummerNote\", (function() {                                    // 62\n  var view = this;                                                                                                // 63\n  return HTML.Raw('<div id=\"summernote\"></div>\\n    <button id=\"post\" type=\"button\" class=\"btn btn-info\">Post</button>');\n}));                                                                                                              // 65\n                                                                                                                  // 66\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"photoButton.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/photoButton.js                                                                                          //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n/* Template.photoButton.events({                                                                                  //\n    'click': function () {                                                                                        //\n //       event.preventDefault();                                                                                 //\n        console.log(\"Photo click..\");                                                                             //\n        //    Meteor.defer(function() {                                                                           //\n        //      $(\"#fInput\").click();                                                                             //\n        //      console.log(\"clicking\",  $(\"#fInput\"))                                                            //\n        //    })                                                                                                  //\n        return false;                                                                                             //\n    }                                                                                                             //\n}); */                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"poster.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/poster.js                                                                                               //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nAccounts.ui.config({                                                                                              // 1\n    passwordSignupFields: \"USERNAME_ONLY\"                                                                         // 2\n});                                                                                                               //\n                                                                                                                  //\n// This code only runs on the client                                                                              //\nTemplate.posts.helpers({                                                                                          // 6\n    posts: function () {                                                                                          // 7\n        function posts() {                                                                                        // 7\n            return Posts.find({}, { sort: { createdAt: -1 } });                                                   // 8\n        }                                                                                                         //\n                                                                                                                  //\n        return posts;                                                                                             //\n    }()                                                                                                           //\n});                                                                                                               //\n                                                                                                                  //\n// TODO: make sure the server only allows user to remove own posts                                                //\nTemplate.post.events({                                                                                            // 14\n    \"click .delete\": function () {                                                                                // 15\n        function clickDelete() {                                                                                  // 15\n            Posts.remove(this._id);                                                                               // 16\n        }                                                                                                         //\n                                                                                                                  //\n        return clickDelete;                                                                                       //\n    }()                                                                                                           //\n});                                                                                                               //\n                                                                                                                  //\nTemplate.post.helpers({                                                                                           // 20\n                                                                                                                  //\n    // Returns true if this post is mine                                                                          //\n    isMyPost: function () {                                                                                       // 23\n        function isMyPost() {                                                                                     // 23\n            var me = Meteor.userId();                                                                             // 24\n                                                                                                                  //\n            // If I am not logged in, none of the posts are recognized as \"mine\"                                  //\n            if (!me) return false;                                                                                // 23\n                                                                                                                  //\n            // TODO: Renamed \"owner\" into \"author\" and never did a db migration.                                  //\n            // \"Owner\" is here only for historical reasons.                                                       //\n            var result = me == this.author || me == this.owner;                                                   // 23\n            return result;                                                                                        // 33\n        }                                                                                                         //\n                                                                                                                  //\n        return isMyPost;                                                                                          //\n    }(),                                                                                                          //\n                                                                                                                  //\n    author: function () {                                                                                         // 36\n        function author() {                                                                                       // 36\n                                                                                                                  //\n            // TODO db migration from owner to author                                                             //\n            var authorId = this.author || this.owner;                                                             // 39\n            var author = Meteor.users.findOne({ _id: authorId });                                                 // 40\n            console.log(\"Found author: \" + \"for \" + authorId, author);                                            // 41\n            return author;                                                                                        // 42\n        }                                                                                                         //\n                                                                                                                  //\n        return author;                                                                                            //\n    }()                                                                                                           //\n});                                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"summernote.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/summernote.js                                                                                           //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nTemplate.mySummerNote.rendered = function () {                                                                    // 1\n    console.log(\"mySummerNote rendered\");                                                                         // 2\n    $('#summernote').summernote({                                                                                 // 3\n        //   airMode: true                                                                                        //\n        height: 80, // set editor height                                                                          // 5\n        minHeight: null, // set minimum height of editor                                                          // 6\n        maxHeight: null, // set maximum height of editor                                                          // 7\n        focus: true, // set focus to editable area after initializing summernote                                  // 8\n        placeholder: \"Type a new post\"                                                                            // 9\n    });                                                                                                           //\n};                                                                                                                //\n                                                                                                                  //\nTemplate.mySummerNote.events({                                                                                    // 14\n    \"ignore me\": function () {                                                                                    // 15\n        function ignoreMe() {                                                                                     // 15\n            var html = $('#summernote').summernote('code');                                                       // 16\n            console.log(html);                                                                                    // 17\n        }                                                                                                         //\n                                                                                                                  //\n        return ignoreMe;                                                                                          //\n    }(),                                                                                                          //\n                                                                                                                  //\n    \"click #post\": function () {                                                                                  // 20\n        function clickPost(event) {                                                                               // 20\n            // Prevent default browser form submit                                                                //\n                                                                                                                  //\n            console.log(\"New rich text post submitted\");                                                          // 23\n            event.preventDefault();                                                                               // 24\n                                                                                                                  //\n            // Get value from form element                                                                        //\n            var html = $('#summernote').summernote('code');                                                       // 20\n            console.log(html);                                                                                    // 28\n                                                                                                                  //\n            // If new post is not empty, insert it                                                                //\n            if ($.trim(html) != '') {                                                                             // 20\n                                                                                                                  //\n                var me = Meteor.user();                                                                           // 33\n                                                                                                                  //\n                // me.sername if user logged in with password.                                                    //\n                // me.profile.name if user logged in with Facebook and maybe other OAuth services.                //\n                var username = me.username || me.profile.name;                                                    // 31\n                                                                                                                  //\n                // Insert a post into the collection                                                              //\n                Posts.insert({                                                                                    // 31\n                    // TODO: this field should now be \"html\", not \"text\", but too lazy to do another db migration\n                    text: html,                                                                                   // 42\n                    createdAt: new Date(), // current time                                                        // 43\n                    author: Meteor.userId(), // _id of logged in user                                             // 44\n                    username: username // username of logged in user                                              // 45\n                });                                                                                               // 40\n                                                                                                                  //\n                // Clear form                                                                                     //\n                $('#summernote').summernote('code', \"\");                                                          // 31\n                //   event.target.text.value = \"\";                                                                //\n            }                                                                                                     // 31\n        }                                                                                                         //\n                                                                                                                  //\n        return clickPost;                                                                                         //\n    }()                                                                                                           //\n});                                                                                                               //\n                                                                                                                  //\nTemplate.mySummerNote.destroyed = function () {                                                                   // 55\n    console.log(\"Template destroyed\");                                                                            // 56\n    $('#summernote').summernote('destroy');                                                                       // 57\n};                                                                                                                //\n                                                                                                                  //\n// TODO sanitize html output of Summernote https://github.com/search?l=JavaScript&q=sanitize+html                 //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"BothClientAndServer\":{\"poster.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// BothClientAndServer/poster.js                                                                                  //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nPosts = new Mongo.Collection(\"posts\");                                                                            // 1\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/poster.html\");\nrequire(\"./BothClientAndServer/poster.js\");\nrequire(\"./client/photoButton.js\");\nrequire(\"./client/poster.js\");\nrequire(\"./client/summernote.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/template.poster.js","/client/poster.js","/client/summernote.js","/BothClientAndServer/poster.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"header\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"posts\")), \"\\n    \");\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"header\");\nTemplate[\"header\"] = new Template(\"Template.header\", (function() {\n  var view = this;\n  return HTML.HEADER(HTML.Raw(\"\\n        <!-- h1>Poster</h1 -->\\n        \"), Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"mySummerNote\")), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"posts\");\nTemplate[\"posts\"] = new Template(\"Template.posts\", (function() {\n  var view = this;\n  return HTML.UL(\"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"posts\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"post\")), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"post\");\nTemplate[\"post\"] = new Template(\"Template.post\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isMyPost\"));\n  }, function() {\n    return [ \"\\n            \", HTML.BUTTON({\n      \"class\": \"delete\"\n    }, HTML.CharRef({\n      html: \"&times;\",\n      str: \"Ã—\"\n    })), \"\\n        \" ];\n  }), \"\\n\\n        \", Blaze._TemplateWith(function() {\n    return {\n      shape: Spacebars.call(\"circle\"),\n      size: Spacebars.call(\"small\"),\n      user: Spacebars.call(\"{{author}}\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"avatar\"));\n  }), \"\\n        \", HTML.DIV({\n    \"class\": \"username\"\n  }, \" \", Blaze.View(\"lookup:username\", function() {\n    return Spacebars.mustache(view.lookup(\"username\"));\n  }), \" \"), \"\\n        \", HTML.DIV({\n    \"class\": \"postText\"\n  }, \" \", Blaze.View(\"lookup:text\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"text\")));\n  }), \" \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"mySummerNote\");\nTemplate[\"mySummerNote\"] = new Template(\"Template.mySummerNote\", (function() {\n  var view = this;\n  return HTML.Raw('<div id=\"summernote\"></div>\\n    <button id=\"post\" type=\"button\" class=\"btn btn-info\">Post</button>');\n}));\n","Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n});\n\n// This code only runs on the client\nTemplate.posts.helpers({\n    posts: function () {\n        return Posts.find({}, {sort: {createdAt: -1}});\n    }\n});\n\n\n// TODO: make sure the server only allows user to remove own posts\nTemplate.post.events({\n    \"click .delete\": function () {\n        Posts.remove(this._id);\n    }\n});\n\nTemplate.post.helpers({\n\n    // Returns true if this post is mine\n    isMyPost: function() {\n        var me = Meteor.userId();\n\n        // If I am not logged in, none of the posts are recognized as \"mine\"\n        if (!me)\n            return false;\n\n        // TODO: Renamed \"owner\" into \"author\" and never did a db migration.\n        // \"Owner\" is here only for historical reasons.\n        var result = ( me == this.author || me == this.owner);\n        return result;\n    },\n\n    author: function() {\n\n        // TODO db migration from owner to author\n        var authorId = this.author || this.owner;\n        var author = Meteor.users.findOne({_id: authorId});\n        console.log(\"Found author: \" + \"for \" + authorId, author);\n        return author;\n    }\n});\n\n\n","Template.mySummerNote.rendered = function () {\n    console.log(\"mySummerNote rendered\");\n    $('#summernote').summernote({\n        //   airMode: true\n        height: 80,                 // set editor height\n        minHeight: null,             // set minimum height of editor\n        maxHeight: null,             // set maximum height of editor\n        focus: true,                  // set focus to editable area after initializing summernote\n        placeholder:  \"Type a new post\"\n    });\n};\n\n\nTemplate.mySummerNote.events({\n    \"ignore me\": function () {\n        var html = $('#summernote').summernote('code');\n        console.log(html);\n    },\n\n    \"click #post\": function (event) {\n        // Prevent default browser form submit\n\n        console.log(\"New rich text post submitted\");\n        event.preventDefault();\n\n        // Get value from form element\n        var html = $('#summernote').summernote('code');\n        console.log(html);\n\n        // If new post is not empty, insert it\n        if ($.trim(html) != '') {\n\n            var me = Meteor.user();\n\n            // me.sername if user logged in with password.\n            // me.profile.name if user logged in with Facebook and maybe other OAuth services.\n            var username = me.username || me.profile.name\n\n            // Insert a post into the collection\n            Posts.insert({\n                // TODO: this field should now be \"html\", not \"text\", but too lazy to do another db migration\n                text: html,\n                createdAt: new Date(),            // current time\n                author: Meteor.userId(),           // _id of logged in user\n                username: username  // username of logged in user\n            });\n\n            // Clear form\n            $('#summernote').summernote('code', \"\");\n            //   event.target.text.value = \"\";\n        }\n    }\n});\n\nTemplate.mySummerNote.destroyed = function() {\n    console.log(\"Template destroyed\");\n    $('#summernote').summernote('destroy');\n}\n\n// TODO sanitize html output of Summernote https://github.com/search?l=JavaScript&q=sanitize+html\n\n","Posts = new Mongo.Collection(\"posts\");\n"]}}]