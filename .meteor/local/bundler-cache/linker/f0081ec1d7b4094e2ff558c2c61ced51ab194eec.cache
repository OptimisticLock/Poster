[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nAvatar = Package['utilities:avatar'].Avatar;\nmeteorEnv = Package.meteor.meteorEnv;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"BothClientAndServer\":{\"poster.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// BothClientAndServer/poster.js                                     //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nPosts = new Mongo.Collection(\"posts\");                               // 1\n///////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"configure.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/configure.js                                               //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nMeteor.startup(function () {                                         // 1\n                                                                     //\n  // Uncomment this to reset botched Facebook OAuth                  //\n                                                                     //\n  //    ServiceConfiguration.configurations.remove({                 //\n  //        service: \"facebook\"                                      //\n  //    });                                                          //\n});                                                                  //\n///////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./BothClientAndServer/poster.js\");\nrequire(\"./server/configure.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/BothClientAndServer/poster.js","/server/configure.js"],"names":[],"mappings":";;;;;;;;AAAA,QAAQ,IAAI,MAAM,UAAN,CAAiB,OAArB,CAAR,oC;;;;;;;;;;;ACAA,OAAO,OAAP,CAAe,YAAY;;;;;;;CAAZ,CAAf,qE","file":"/app.js","sourcesContent":["Posts = new Mongo.Collection(\"posts\");\n","Meteor.startup(function () {\n\n// Uncomment this to reset botched Facebook OAuth\n\n//    ServiceConfiguration.configurations.remove({\n//        service: \"facebook\"\n//    });\n});\n"]}}]